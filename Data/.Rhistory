ont           = "MF",
pAdjustMethod = "BH",
pvalueCutoff  = 0.05,
qvalueCutoff  = 0.2)
# Barplot
barplot(ego_CC_prim, showCategory = 15) + ggtitle("GO Molecular Function Enrichment")
# Barplot
barplot(ego_CC_prim, showCategory = 10) + ggtitle("GO Molecular Function Enrichment")
ego_CC_prim
ego_BP_prim
entrez_ids_prim
genes_relevantes_prim
# Barplot
barplot(ego_CC_prim, showCategory = 10) + ggtitle("GO Molecular Function Enrichment")
clas_sel <- clas_df[,colnames(clas_df) %in% c(genes_relevantes,"clase")]
clas_sel
cor(clas_sel)
expr <- clas_sel[,!"clase"]
expr <- clas_sel[,!colnames(clas_sel) == "clase"]
expr
cor(expr)
plot(cor(expr))
heatmap(cor(expr))
heatmap(cor(expr), ColSideColors = c("blue","white","red"))
heatmap(cor(expr), col = colorRampPalette(c("navy", "white", "firebrick3"))(50)))
heatmap(cor(expr), col = colorRampPalette(c("navy", "white", "firebrick3"))(50))
heatmap(cor(expr), col = colorRampPalette(c("blue", "white", "red"))(100))
genes1 <- c("ACBD4","LTC4S","PLD4")
entrez_genes <- bitr(genes1, fromType="SYMBOL", toType="ENTREZID", OrgDb="org.Hs.eg.db")
entrez_ids <- entrez_genes$ENTREZID
ego_BP <- enrichGO(gene          = entrez_ids,
OrgDb         = org.Hs.eg.db,
keyType       = 'ENTREZID',
ont           = "BP",
pAdjustMethod = "BH",
pvalueCutoff  = 0.05,
qvalueCutoff  = 0.2)
ego_BP
# Barplot
barplot(ego_BP, showCategory = 15) + ggtitle("GO Molecular Function Enrichment")
ego_CC <- enrichGO(gene          = entrez_ids,
OrgDb         = org.Hs.eg.db,
keyType       = 'ENTREZID',
ont           = "CC",
pAdjustMethod = "BH",
pvalueCutoff  = 0.05,
qvalueCutoff  = 0.2)
ego_MF <- enrichGO(gene          = entrez_ids,
OrgDb         = org.Hs.eg.db,
keyType       = 'ENTREZID',
ont           = "MF",
pAdjustMethod = "BH",
pvalueCutoff  = 0.05,
qvalueCutoff  = 0.2)
# Barplot
barplot(ego_CC, showCategory = 15) + ggtitle("GO Molecular Function Enrichment")
# Barplot
barplot(ego_MF, showCategory = 15) + ggtitle("GO Molecular Function Enrichment")
heatmap(cor(expr), col = colorRampPalette(c("blue", "white", "red"))(100))
genes2 <- subset(genes_relevantes, genes_relevantes != genes1)
length(genes_relevantes)
genes1 %in% genes2
dim(expr)
clas_df[,genes_relevantes]
clas_df[1:2,1:3]
clas_df[genes_relevantes]
clas_df[genes_relevantes,]
clas_df[,genes_relevantes]
genes_relevantes
genes2 <- c("CDT1", "EPSTI1", "OASL","UBE2L6","B2M","IFIT3","TAP1","HLA-B","PSMB9")
entrez_genes <- bitr(genes2, fromType="SYMBOL", toType="ENTREZID", OrgDb="org.Hs.eg.db")
entrez_ids <- entrez_genes$ENTREZID
ego_BP <- enrichGO(gene          = entrez_ids,
OrgDb         = org.Hs.eg.db,
keyType       = 'ENTREZID',
ont           = "BP",
pAdjustMethod = "BH",
pvalueCutoff  = 0.05,
qvalueCutoff  = 0.2)
ego_CC <- enrichGO(gene          = entrez_ids,
OrgDb         = org.Hs.eg.db,
keyType       = 'ENTREZID',
ont           = "CC",
pAdjustMethod = "BH",
pvalueCutoff  = 0.05,
qvalueCutoff  = 0.2)
ego_MF <- enrichGO(gene          = entrez_ids,
OrgDb         = org.Hs.eg.db,
keyType       = 'ENTREZID',
ont           = "MF",
pAdjustMethod = "BH",
pvalueCutoff  = 0.05,
qvalueCutoff  = 0.2)
# Barplot
barplot(ego_MF, showCategory = 15) + ggtitle("GO Molecular Function Enrichment")
# Barplot
barplot(ego_CC, showCategory = 15) + ggtitle("GO Molecular Function Enrichment")
# Barplot
barplot(ego_BP, showCategory = 15) + ggtitle("GO Molecular Function Enrichment")
genes1 %in% firmas[[1]]
genes1 %in% firmas[[2]]
genes1 %in% firmas[[3]]
genes1 %in% firmas[[4]]
genes1 %in% firmas[[5]]
genes1 %in% firmas[[6]]
genes1 %in% firmas[[7]]
genes1 %in% firmas[[8]]
genes2 %in% firmas[[1]]
genes2 %in% firmas[[2]]
genes2 %in% firmas[[3]]
genes2 %in% firmas[[4]]
genes2 %in% firmas[[5]]
genes2 %in% firmas[[6]]
genes2 %in% firmas[[7]]
genes2 %in% firmas[[8]]
AURORA_met
### Para AURORA
load(file = "C:/Users/Suruxx/Documents/TFM/data/aurora_dataset.RData")
high_stem <- c()
low_stem <- c()
high_immune <- c()
low_immune <- c()
for (i in colnames(aurora_metastasis)) {
if (gsva_aurora_met["benporath",i] >= median(gsva_aurora_met["benporath",])){
high_stem <- c(high_stem, i)
}
if (gsva_aurora_met["benporath",i] <= median(gsva_aurora_met["benporath",])) {
low_stem <- c(low_stem, i)
}
if (gsva_aurora_met["MP17",i] >= median(gsva_aurora_met["MP17",])){
high_immune <- c(high_immune,i)
}
if (gsva_aurora_met["MP17", i] <= median(gsva_aurora_met["MP17",])){
low_immune <- c(low_immune,i)
}
}
load("C:/Users/Suruxx/Documents/TFM/data/AURORA_MODULOS_MET.RData")
for (i in colnames(aurora_metastasis)) {
if (gsva_aurora_met["benporath",i] >= median(gsva_aurora_met["benporath",])){
high_stem <- c(high_stem, i)
}
if (gsva_aurora_met["benporath",i] <= median(gsva_aurora_met["benporath",])) {
low_stem <- c(low_stem, i)
}
if (gsva_aurora_met["MP17",i] >= median(gsva_aurora_met["MP17",])){
high_immune <- c(high_immune,i)
}
if (gsva_aurora_met["MP17", i] <= median(gsva_aurora_met["MP17",])){
low_immune <- c(low_immune,i)
}
}
met_ids <- c()
clase <- c()
for (i in colnames(aurora_metastasis)) {
if (i %in% high_stem[high_stem %in% high_immune]) {
clase <- c(clase,"HSHI")
met_ids <- c(met_ids,i)
}
if (i %in% high_stem[high_stem %in% low_immune]){
clase <- c(clase, "HSLI")
met_ids <- c(met_ids,i)
}
if (i %in% low_stem[low_stem %in% high_immune]){
clase <- c(clase,"LSHI")
met_ids <- c(met_ids,i)
}
if (i %in% low_stem[low_stem %in% low_immune]){
clase <- c(clase,"LSLI")
met_ids <- c(met_ids,i)
}
}
kmet <- kmeans(aurora_metastasis,centers = 4)
kmet
kmet <- kmeans(t(aurora_metastasis),centers = 4)
kmet
scores_mat <- cbind(
stemness = gsva_aurora_met["benporath",],
immunogenicity = gsva_aurora_met["MP17",])
rownames(scores_mat) <- colnames(aurora_metastasis)
plot(scores_mat,col=kmet$centers)
plot(scores_mat,col=kmet$centers, pch = 19)
htree <- hclust(dist(t(aurora_metastasis)), method = "average")
plot(htree)
plot(htree, col = kmet$cluster)
clase
library(dendextend)
install.packages("dendextend")
library(dendextend)
dendo <- as.dendrogram(htree)
plot(dendo)
label_colors <- c("red", "blue", "green", "orange")[clase[order.dendrogram(dend)]]
label_colors <- c("red", "blue", "green", "orange")[clase[order.dendrogram(dendo)]]
label_colors
clase
order.dendrogram(dendo)
clase[order.dendrogram(dendo)]
clase_niv <- as.factor(clase, labels = c(1,2,3,4))
clase_niv <- as.factor(clase, levels = c(1,2,3,4))
clase_niv
clase_niv <- as.factor(clase, levels(c(1,2,3,4)))
clase_niv <- as.factor(clase)
levels(clase_niv) <- c(1,2,3,4)
clase
clase_niv
label_colors <- c("red", "blue", "green", "orange")[clase_niv[order.dendrogram(dendo)]]
label_colors
# Aplicar colores a las etiquetas
labels_colors(dendo) <- label_colors
# Graficar
plot(dendo, main = "Dendrograma con etiquetas coloreadas")
color_branches(dendo) <- label_colors
color_branches(dendo) <- label_colors
htree <- hclust(dist(t(tcga_data)), method = "average")
dendo <- as.dendrogram(htree)
high_stem <- c()
low_stem <- c()
high_immune <- c()
low_immune <- c()
for (i in colnames(tcga_data)) {
if (gsva_tcga["benporath",i] >= quantile(gsva_tcga["benporath",], probs = 0.75)){
high_stem <- c(high_stem, i)
}
if (gsva_tcga["benporath",i] <= quantile(gsva_tcga["benporath",], probs = 0.25)) {
low_stem <- c(low_stem, i)
}
if (gsva_tcga["MP17",i] >= quantile(gsva_tcga["MP17",], probs = 0.75)){
high_immune <- c(high_immune,i)
}
if (gsva_tcga["MP17", i] <= quantile(gsva_tcga["MP17",], probs = 0.25)){
low_immune <- c(low_immune,i)
}
}
tcga_ids <- c()
clase <- c()
for (i in colnames(tcga_data)) {
if (i %in% high_stem[high_stem %in% high_immune]) {
clase <- c(clase,"HSHI")
tcga_ids <- c(tcga_ids,i)
}
if (i %in% high_stem[high_stem %in% low_immune]){
clase <- c(clase, "HSLI")
tcga_ids <- c(tcga_ids,i)
}
if (i %in% low_stem[low_stem %in% high_immune]){
clase <- c(clase,"LSHI")
tcga_ids <- c(tcga_ids,i)
}
if (i %in% low_stem[low_stem %in% low_immune]){
clase <- c(clase,"LSLI")
tcga_ids <- c(tcga_ids,i)
}
}
dendo <- as.dendrogram(htree)
clase_niv <- as.factor(clase)
levels(clase_niv) <- c(1,2,3,4)
label_colors <- c("red", "blue", "green", "orange")[clase_niv[order.dendrogram(dendo)]]
# Aplicar colores a las etiquetas
labels_colors(dendo) <- label_colors
# Graficar
plot(dendo, main = "Dendrograma con etiquetas coloreadas")
expr
htree <- hclust(dist(t(expr)), method = "average")
htree
htree <- hclust(dist(expr, method = "average")
)
htree <- hclust(dist(expr), method = "average")
htree
dendo <- as.dendrogram(htree)
clase_niv <- as.factor(clase)
levels(clase_niv) <- c(1,2,3,4)
label_colors <- c("red", "blue", "green", "orange")[clase_niv[order.dendrogram(dendo)]]
# Aplicar colores a las etiquetas
labels_colors(dendo) <- label_colors
# Graficar
plot(dendo, main = "Dendrograma con etiquetas coloreadas")
genes_relevantes_met
aurora_metastasis[,genes_relevantes_met]
aurora_metastasis[genes_relevantes_met,]
expr_met <- aurora_metastasis[genes_relevantes_met,]
htree <- hclust(dist(expr_met), method = "average")
htree
htree <- hclust(dist(t(expr_met)), method = "average")
htree
dendo <- as.dendrogram(htree)
high_stem <- c()
low_stem <- c()
high_immune <- c()
low_immune <- c()
for (i in colnames(aurora_metastasis)) {
if (gsva_aurora_met["benporath",i] >= median(gsva_aurora_met["benporath",])){
high_stem <- c(high_stem, i)
}
if (gsva_aurora_met["benporath",i] <= median(gsva_aurora_met["benporath",])) {
low_stem <- c(low_stem, i)
}
if (gsva_aurora_met["MP17",i] >= median(gsva_aurora_met["MP17",])){
high_immune <- c(high_immune,i)
}
if (gsva_aurora_met["MP17", i] <= median(gsva_aurora_met["MP17",])){
low_immune <- c(low_immune,i)
}
}
clase <- c()
for (i in colnames(aurora_metastasis)) {
if (i %in% high_stem[high_stem %in% high_immune]) {
clase <- c(clase,"HSHI")
met_ids <- c(met_ids,i)
}
if (i %in% high_stem[high_stem %in% low_immune]){
clase <- c(clase, "HSLI")
met_ids <- c(met_ids,i)
}
if (i %in% low_stem[low_stem %in% high_immune]){
clase <- c(clase,"LSHI")
met_ids <- c(met_ids,i)
}
if (i %in% low_stem[low_stem %in% low_immune]){
clase <- c(clase,"LSLI")
met_ids <- c(met_ids,i)
}
}
clase_niv <- as.factor(clase)
levels(clase_niv) <- c(1,2,3,4)
label_colors <- c("red", "blue", "green", "orange")[clase_niv[order.dendrogram(dendo)]]
# Aplicar colores a las etiquetas
labels_colors(dendo) <- label_colors
# Graficar
plot(dendo, main = "Dendrograma con etiquetas coloreadas")
ktcga <- kmeans(expr, centers = 4)
ktcga
scores_mat <- cbind(
stemness = gsva_tcga["benporath",],
immunogenicity = gsva_tcga["MP17",])
rownames(scores_mat) <- colnames(tcga_data)
plot(scores_mat,col = ktcga$cluster)
plot(scores_mat,col = ktcga$cluster, pch = 19)
load("C:/Users/Suruxx/Documents/TFM/data/lista_genes_aurora_met.RData")
entrez_genes <- bitr(genes_relevantes_prim, fromType="SYMBOL", toType="ENTREZID", OrgDb="org.Hs.eg.db")
entrez_ids_prim <- entrez_genes$ENTREZID
ego_BP_met <- enrichGO(gene          = entrez_ids_prim,
OrgDb         = org.Hs.eg.db,
keyType       = 'ENTREZID',
ont           = "BP",
pAdjustMethod = "BH",
pvalueCutoff  = 0.05,
qvalueCutoff  = 0.2)
ego_BP_prim <- enrichGO(gene          = entrez_ids_prim,
OrgDb         = org.Hs.eg.db,
keyType       = 'ENTREZID',
ont           = "BP",
pAdjustMethod = "BH",
pvalueCutoff  = 0.05,
qvalueCutoff  = 0.2)
ego_CC_prim <- enrichGO(gene          = entrez_ids_prim,
OrgDb         = org.Hs.eg.db,
keyType       = 'ENTREZID',
ont           = "CC",
pAdjustMethod = "BH",
pvalueCutoff  = 0.05,
qvalueCutoff  = 0.2)
ego_MF_prim <- enrichGO(gene          = entrez_ids_prim,
OrgDb         = org.Hs.eg.db,
keyType       = 'ENTREZID',
ont           = "MF",
pAdjustMethod = "BH",
pvalueCutoff  = 0.05,
qvalueCutoff  = 0.2)
# Barplot
barplot(ego_CC_prim, showCategory = 15) + ggtitle("GO Molecular Function Enrichment")
# Barplot
barplot(ego_MF_prim, showCategory = 15) + ggtitle("GO Molecular Function Enrichment")
# Barplot
barplot(ego_BP_prim, showCategory = 15) + ggtitle("GO Molecular Function Enrichment")
genes_relevantes_prim
genes_relevantes_met
entrez_genes <- bitr(genes_relevantes_met, fromType="SYMBOL", toType="ENTREZID", OrgDb="org.Hs.eg.db")
entrez_genes
genes_relevantes_met["LINC00565"]
grepl("LINC00565",genes_relevantes_met)
grep("LINC00565",genes_relevantes_met)
genes_relevantes_met[grep("LINC00565",genes_relevantes_met)]
genes_relevantes_met[grep("LINC00565",genes_relevantes_met)] <- "SWINGN"
genes_relevantes_met
genes_relevantes_met[grep("HIST2H3C",genes_relevantes_met)] <- "H3C14"
genes_relevantes_met[grep("HIST2H3A",genes_relevantes_met)] <- "H3C15"
genes_relevantes_met[grep("HIST1H3B",genes_relevantes_met)] <- "H3C2"
genes_relevantes_met[grep("HIST1H2BL",genes_relevantes_met)] <- "H2BC13"
genes_relevantes_met[grep("HIST1H2AI",genes_relevantes_met)] <- "H2AC13"
genes_relevantes_met[grep("HIST1H3H",genes_relevantes_met)] <- "H3C10"
genes_relevantes_met[grep("HIST1H4J",genes_relevantes_met)] <- "H4C11"
genes_relevantes_met[grep("HIST1H2AL",genes_relevantes_met)] <- "H2AC16"
genes_relevantes_met[grep("HIST1H2BO",genes_relevantes_met)] <- "H2BC17"
genes_relevantes_met[grep("H2AFX",genes_relevantes_met)] <- "H2AX"
genes_relevantes_met[grep("LINC00565",genes_relevantes_met)] <- "SWINGN"
entrez_genes <- bitr(genes_relevantes_met, fromType="SYMBOL", toType="ENTREZID", OrgDb="org.Hs.eg.db")
entrez_ids_met <- entrez_genes$ENTREZID
ego_BP_met <- enrichGO(gene          = entrez_ids_met,
OrgDb         = org.Hs.eg.db,
keyType       = 'ENTREZID',
ont           = "BP",
pAdjustMethod = "BH",
pvalueCutoff  = 0.05,
qvalueCutoff  = 0.2)
ego_CC_met <- enrichGO(gene          = entrez_ids_met,
OrgDb         = org.Hs.eg.db,
keyType       = 'ENTREZID',
ont           = "CC",
pAdjustMethod = "BH",
pvalueCutoff  = 0.05,
qvalueCutoff  = 0.2)
ego_MF_met <- enrichGO(gene          = entrez_ids_met,
OrgDb         = org.Hs.eg.db,
keyType       = 'ENTREZID',
ont           = "MF",
pAdjustMethod = "BH",
pvalueCutoff  = 0.05,
qvalueCutoff  = 0.2)
# Barplot
barplot(ego_BP_met, showCategory = 15) + ggtitle("GO Molecular Function Enrichment")
# Barplot
barplot(ego_CC_met, showCategory = 15) + ggtitle("GO Molecular Function Enrichment")
# Barplot
barplot(ego_MF_met, showCategory = 15) + ggtitle("GO Molecular Function Enrichment")
entrez_genes <- bitr(genes_relevantes, fromType="SYMBOL", toType="ENTREZID", OrgDb="org.Hs.eg.db")
entrez_ids <- entrez_genes$ENTREZID
ego_BP <- enrichGO(gene          = entrez_ids,
OrgDb         = org.Hs.eg.db,
keyType       = 'ENTREZID',
ont           = "BP",
pAdjustMethod = "BH",
pvalueCutoff  = 0.05,
qvalueCutoff  = 0.2)
ego_CC <- enrichGO(gene          = entrez_ids,
OrgDb         = org.Hs.eg.db,
keyType       = 'ENTREZID',
ont           = "CC",
pAdjustMethod = "BH",
pvalueCutoff  = 0.05,
qvalueCutoff  = 0.2)
ego_MF <- enrichGO(gene          = entrez_ids,
OrgDb         = org.Hs.eg.db,
keyType       = 'ENTREZID',
ont           = "MF",
pAdjustMethod = "BH",
pvalueCutoff  = 0.05,
qvalueCutoff  = 0.2)
# Barplot
barplot(ego_BP, showCategory = 15) + ggtitle("GO Biological Process Enrichment\n TCGA data")
# Barplot
barplot(ego_BP, showCategory = 10) + ggtitle("GO Biological Process Enrichment TCGA data")
barplot(ego_CC, showCategory = 10) + ggtitle("GO Cellular Component Enrichment TCGA data")
barplot(ego_BP, showCategory = 10) + ggtitle("GO Molecular Function Enrichment TCGA data")
# Network plot (opcional)
cnetplot(ego_BP, categorySize="pvalue", foldChange=NULL)
entrez_genes <- bitr(genes_relevantes_prim, fromType="SYMBOL", toType="ENTREZID", OrgDb="org.Hs.eg.db")
entrez_ids_prim <- entrez_genes$ENTREZID
barplot(ego_MF, showCategory = 10) + ggtitle("GO Molecular Function Enrichment TCGA data")
entrez_genes <- bitr(genes_relevantes_prim, fromType="SYMBOL", toType="ENTREZID", OrgDb="org.Hs.eg.db")
entrez_ids_prim <- entrez_genes$ENTREZID
ego_BP_prim <- enrichGO(gene          = entrez_ids_prim,
OrgDb         = org.Hs.eg.db,
keyType       = 'ENTREZID',
ont           = "BP",
pAdjustMethod = "BH",
pvalueCutoff  = 0.05,
qvalueCutoff  = 0.2)
ego_CC_prim <- enrichGO(gene          = entrez_ids_prim,
OrgDb         = org.Hs.eg.db,
keyType       = 'ENTREZID',
ont           = "CC",
pAdjustMethod = "BH",
pvalueCutoff  = 0.05,
qvalueCutoff  = 0.2)
ego_MF_prim <- enrichGO(gene          = entrez_ids_prim,
OrgDb         = org.Hs.eg.db,
keyType       = 'ENTREZID',
ont           = "MF",
pAdjustMethod = "BH",
pvalueCutoff  = 0.05,
qvalueCutoff  = 0.2)
# Barplot
barplot(ego_BP_prim, showCategory = 10) + ggtitle("GO Biological Process Enrichment AURORA primarios")
barplot(ego_CC_prim, showCategory = 10) + ggtitle("GO Cellular Component Enrichment AURORA primarios")
barplot(ego_MF_prim, showCategory = 10) + ggtitle("GO Molecular Function Enrichment AURORA primarios")
entrez_genes <- bitr(genes_relevantes_met, fromType="SYMBOL", toType="ENTREZID", OrgDb="org.Hs.eg.db")
entrez_ids_met <- entrez_genes$ENTREZID
ego_BP_met <- enrichGO(gene          = entrez_ids_met,
OrgDb         = org.Hs.eg.db,
keyType       = 'ENTREZID',
ont           = "BP",
pAdjustMethod = "BH",
pvalueCutoff  = 0.05,
qvalueCutoff  = 0.2)
ego_CC_met <- enrichGO(gene          = entrez_ids_met,
OrgDb         = org.Hs.eg.db,
keyType       = 'ENTREZID',
ont           = "CC",
pAdjustMethod = "BH",
pvalueCutoff  = 0.05,
qvalueCutoff  = 0.2)
ego_MF_met <- enrichGO(gene          = entrez_ids_met,
OrgDb         = org.Hs.eg.db,
keyType       = 'ENTREZID',
ont           = "MF",
pAdjustMethod = "BH",
pvalueCutoff  = 0.05,
qvalueCutoff  = 0.2)
# Barplot
barplot(ego_BP_met, showCategory = 10) + ggtitle("GO Biological Process Enrichment AURORA metastasis")
barplot(ego_CC_met, showCategory = 10) + ggtitle("GO Cellular Component Enrichment AURORA metastasis")
barplot(ego_MF_met, showCategory = 10) + ggtitle("GO Molecular Function Enrichment AURORA metastasis")
genes_relevantes_prim
